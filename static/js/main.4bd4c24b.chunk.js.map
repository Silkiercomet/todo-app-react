{"version":3,"sources":["Header/Header.js","images/icon-sun.svg","images/icon-moon.svg","Todo/Brand.js","Todo/AddItem.js","Todo/LineItem.js","Todo/ItemsList.js","Todo/Todo.js","Todo__container/TodoContainer.js","Theme/ThemeContext.js","App.js","reportWebVitals.js","index.js"],"names":["Header","isDark","className","id","Brand","toggleTheme","onClick","src","toggler2","toggler","alt","AddItem","newItems","setNewItems","HandleSubmit","inputRef","useRef","onSubmit","e","preventDefault","type","current","focus","autoFocus","ref","placeholder","required","value","onChange","target","LineItem","item","HandleCheck","HandleDelete","checked","for","style","textDecoration","color","onDoubleClick","tabIndex","ItemList","setActive","active","items","setItem","darkStyle","lightStyle","activeColor","obj","map","filter","length","Todo","TodoContainer","themes","dark","backgroundColor","light","ThemeContext","createContext","ThemeProvider","children","useState","setIsDark","theme","useEffect","localStorage","getItem","Provider","JSON","stringify","App","parse","useContext","console","log","setstorage","x","myNewItem","myNewList","AddToList","listItems","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bd4c24b.chunk.js","sourcesContent":["import './header.css'\r\n\r\nfunction Header({isDark}) {\r\n    return (\r\n        <section className=\"header_bg\" id={isDark?'Bg_D':'Bg_L'}/*style={{backgroundImage: isDark? `url(${Bg_D})` : `url(${Bg_L})`}}*/>\r\n            \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","import './todo.css'\r\nimport toggler from '../images/icon-sun.svg'\r\nimport toggler2 from '../images/icon-moon.svg'\r\nfunction Brand({isDark ,toggleTheme}) {\r\n    return (\r\n        <header className=\"brand\">\r\n            <h1 id=\"brandName\">TODO</h1>\r\n            <figure>\r\n            <button onClick={toggleTheme} className=\"btn\">\r\n            <img src={ isDark ? toggler2 : toggler} alt=\"toggle dark light theme\"></img>\r\n            </button>\r\n                \r\n            </figure>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Brand\r\n","import './todo.css'\r\nimport { useRef } from \"react\";\r\n  \r\nfunction AddItem({isDark, newItems,setNewItems,HandleSubmit}) {\r\n    const inputRef = useRef();\r\n    \r\n    return (\r\n        <form className=\"addForm\" onSubmit={(e)=>{\r\n          e.preventDefault()\r\n          HandleSubmit()\r\n        }} id={isDark?'Bg_DD':'Bg_LL'}>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        aria-label=\"add item\"\r\n        onClick={() => inputRef.current.focus()}\r\n        className=\"Subbtn\"\r\n        id={isDark?'B_D':'B_L'}\r\n      >\r\n      \r\n      </button>\r\n\r\n      <input\r\n        autoFocus\r\n        className={isDark?'C_DD':'C_LL'}\r\n        ref={inputRef}\r\n        id=\"addItems\"\r\n        type=\"text\"\r\n        placeholder=\"Create a new todo...\"\r\n        required\r\n        value={newItems}\r\n        onChange={(e) => setNewItems(e.target.value)}\r\n        \r\n      />\r\n\r\n\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","const LineItem = ({isDark, item, HandleCheck, HandleDelete }) => {\r\n    return (\r\n      <li className=\"item\" id={isDark?\"DBB\":\"LBB\"}>\r\n        <input\r\n          className=\"checkbox\"\r\n          id={item.id}\r\n          type=\"checkbox\"\r\n          onChange={() => HandleCheck(item.id)}\r\n          checked={item.checked}\r\n        />\r\n        <label for={item.id} className=\"checkmark\"></label>\r\n        <label\r\n          className=\"text\"\r\n          style={\r\n            item.checked === true ? { textDecoration: \"line-through\", color:\"hsl(236, 9%, 61%)\" } : null\r\n          }\r\n          onDoubleClick={() => HandleCheck(item.id)}\r\n        >\r\n          {item.item}\r\n        </label>\r\n        <button\r\n          className=\"delete\"\r\n          onClick={() => HandleDelete(item.id)}\r\n          tabIndex=\"0\"\r\n          aria-label={\"Delete item \" + item.item}\r\n        />\r\n        \r\n      </li>\r\n    );\r\n  };\r\n  export default LineItem;\r\n  ","import LineItem from \"./LineItem\";\r\n\r\nconst ItemList = ({setActive,active,isDark, items, HandleCheck, HandleDelete, setItem }) => {\r\n    const darkStyle = {\r\n        color:\"hsl(0, 0%, 98%)\",\r\n    },\r\n    lightStyle = {\r\n        color:\"hsl(235, 24%, 19%)\"\r\n    },\r\n    activeColor = {\r\n        color:\"hsl(220, 98%, 61%)\"\r\n    }\r\n    let obj = {\r\n        '0':items.map((item) => item)\r\n        ,\r\n        '1':items.filter((item) => {\r\n            if(item.checked === false){\r\n                return item\r\n            }\r\n        }),\r\n        '2':items.filter((item) => {\r\n            if(item.checked !== false){\r\n                return item\r\n            }\r\n        })\r\n    }\r\n    \r\n  return (\r\n    <section className=\"itemsLIst\"> \r\n\r\n\r\n        <ul className={isDark?\"DList\":\"LList\"}>\r\n        {obj[active].map((item) => (\r\n            <LineItem\r\n            isDark={isDark}\r\n            key={item.id}\r\n            item={item}\r\n            HandleCheck={HandleCheck}\r\n            HandleDelete={HandleDelete}\r\n            />\r\n        ))}\r\n        </ul>\r\n\r\n\r\n        <footer className={isDark?\"DList\":\"LList\"}>\r\n            <span style={{color:\"hsl(234, 11%, 52%)\"}}>items left: {items.length}</span>\r\n            <menu className={isDark?\"DList\":\"LList\"}>\r\n                <button onClick={()=>setActive(0)} className=\"btn\" style={active === 0 ? activeColor : isDark ? darkStyle : lightStyle}>All</button>\r\n                <button onClick={()=>setActive(1)} className=\"btn\" style={active === 1 ? activeColor : isDark ? darkStyle : lightStyle}>Active</button>\r\n                <button onClick={()=>setActive(2)} className=\"btn\" style={active === 2 ? activeColor : isDark ? darkStyle : lightStyle}>Completed</button>\r\n                \r\n            </menu>\r\n            <button className=\"btn\" style={{color:\"hsl(234, 11%, 52%)\"}} \r\n            onClick={()=> setItem(obj[\"1\"])}>Clear Completed</button>\r\n        </footer>\r\n\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ItemList;","import Brand from './Brand'\r\nimport AddItem from './AddItem'\r\nimport ItemList from './ItemsList'\r\nfunction Todo({setActive,active,items,isDark, toggleTheme,newItems,setNewItems,HandleSubmit,\r\n    HandleCheck,HandleDelete,setItem}) {\r\n    return (\r\n        <main>\r\n            <Brand isDark={isDark} toggleTheme={toggleTheme}/>\r\n            <AddItem \r\n                newItems={newItems}\r\n                setNewItems={setNewItems}\r\n                HandleSubmit={HandleSubmit}\r\n                isDark={isDark}\r\n            />\r\n            \r\n            <ItemList \r\n            isDark={isDark}\r\n            HandleCheck={HandleCheck}\r\n            HandleDelete={HandleDelete}\r\n            items={items}\r\n            setActive={setActive}\r\n            active={active}\r\n            setItem={setItem}\r\n            />\r\n           \r\n            \r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import Todo from '../Todo/Todo'\r\nimport \"./todocontainer.css\"\r\nfunction TodoContainer({setActive,active,items,HandleCheck,HandleDelete,isDark ,\r\n    toggleTheme,newItems,setNewItems,setItem,\r\n    HandleSubmit}) {\r\n    return (\r\n        <section className=\"container\">\r\n            <Todo isDark={isDark}\r\n                toggleTheme={toggleTheme}\r\n                newItems={newItems}\r\n                setNewItems={setNewItems}\r\n                HandleSubmit={HandleSubmit}\r\n                HandleCheck={HandleCheck}\r\n                HandleDelete={HandleDelete}\r\n                items={items}\r\n                setActive={setActive}\r\n                active={active}\r\n                setItem={setItem}\r\n            />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default TodoContainer\r\n","import {createContext,useState,useEffect} from 'react'\r\n\r\nconst themes = {\r\n    dark: {\r\n      backgroundColor: \"hsl(235, 21%, 11%)\",\r\n      color: \"hsl(0, 0%, 98%)\",\r\n    },\r\n    light: {\r\n      backgroundColor: \"hsl(0, 0%, 98%)\",\r\n      color: \"black\",\r\n    },\r\n  };\r\n  \r\n  export const ThemeContext = createContext();\r\n  \r\n  export const ThemeProvider = ({ children }) => {\r\n    const [isDark, setIsDark] = useState(false);\r\n    const toggleTheme = () => {\r\n      localStorage.setItem(\"isDark\", JSON.stringify(!isDark));\r\n      setIsDark(!isDark);\r\n    };\r\n    const theme = isDark ? themes.dark : themes.light;\r\n  \r\n    useEffect(() => {\r\n      const isDark = localStorage.getItem(\"isDark\") === \"true\";\r\n      setIsDark(isDark);\r\n    }, []);\r\n  \r\n    return (\r\n      <ThemeContext.Provider value={[{ theme, isDark }, toggleTheme]}>\r\n        {children}\r\n      </ThemeContext.Provider>\r\n    );\r\n  };\r\n","import './App.css';\nimport Header from './Header/Header'\nimport TodoContainer from './Todo__container/TodoContainer'\nimport {useState, useContext, useEffect} from 'react'\nimport { ThemeContext } from './Theme/ThemeContext';\n\n\n\nfunction App() {\n//--------------------Hooks------------------>\n\n  const [items, setItem] = useState(JSON.parse(localStorage.getItem('shoppinglist')) || [])\n  const [{theme, isDark}, toggleTheme] = useContext(ThemeContext)\n  const [newItems, setNewItems] = useState(\"\");\n  const [active,setActive] = useState(0);\n\n  useEffect(() => {\n    localStorage.setItem('shoppinglist', JSON.stringify(items));\n  }, [items])\n  useEffect(() => {\n    console.log(active)\n  }, [active])\n//------------------------------------------->\n//-----------------functions----------------->\n  const setstorage = (x) => {\n    //x an array with the todo's\n    setItem(x);\n    localStorage.setItem(\"shoppinglist\", JSON.stringify(x));\n  };\n  const AddToList = (item) => {\n    //add new items\n    const id = items.length ? items[items.length - 1].id + 1 : 1;\n    const myNewItem = { id, checked: false, item };\n    const myNewList = [...items, myNewItem];\n    setstorage(myNewList);\n  };\n  const HandleCheck = (id) => {\n    const listItems = items.map((item) =>\n      item.id === id ? { ...item, checked: !item.checked } : item\n    );\n    setstorage(listItems);\n  };\n\n  const HandleDelete = (id) => {\n    const listItems = items.filter((item) => item.id !== id);\n    setstorage(listItems);\n  };\n  const HandleSubmit = () => {\n\n    if (!newItems) return;\n    //add item\n    AddToList(newItems);\n    setNewItems(\"\");\n  };\n//------------------------------------------->\n\n  return (\n    <body className=\"App\" style={{ backgroundColor: theme.backgroundColor, color: theme.color }}>\n\n      <Header isDark={isDark}/>\n      <TodoContainer \n        items={items}\n        isDark={isDark} \n        toggleTheme={toggleTheme}\n        newItems={newItems}\n        setNewItems={setNewItems}\n        HandleSubmit={HandleSubmit}\n        HandleCheck={HandleCheck}\n        HandleDelete={HandleDelete}\n        setActive={setActive}\n        active={active}\n        setItem={setItem}\n      />\n\n      \n    </body>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {ThemeProvider} from './Theme/ThemeContext'\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}